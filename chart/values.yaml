# Default values for chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: gcr.io/astute-synapse-332322/core-ledger-server
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

psp:
  enabled: true

podSecurityContext:
  fsGroup: 65535

securityContext:
  capabilities:
    drop:
      - ALL
  runAsNonRoot: true
  runAsUser: 65535

tls:
  enabled: true
  ca:
    cluster: true
    duration: 17520h
    commonName:
    issuer:
    ipAddresses:
    dnsNames:
    privateKey:
      algorithm: RSA
      size: 4096
      rotationPolicy: Always
    subject:
      organizationalUnits:
        - immudb-ca
      organizations:
        - easycrypto.ai

certs:
  server:
    duration: 2160h
    ipAddresses:
      - 127.0.0.1
    dnsNames:
      - localhost
  client:
    duration: 2160h
    generated: true
    keystore:
      pkcs12:
        enabled: true
        password: "12345678"
    ipAddresses:
      - 127.0.0.1
    dnsNames:
      - localhost
  immudb:
    duration: 2160h
    generated: true
    secret: ""
    issuer:
      group: cert-manager.io
      kind: ClusterIssuer
      name: ec-immudb-issuer
    ipAddresses:
      - 127.0.0.1
    dnsNames:
      - localhost

ledger:
  logLevel: info
  batchSize: 100
  accessLogger: true
  production: false
  serverName: ""

  metrics:
    enabled: true
    port: 9094

  mtls:
    enabled: true
    certFile: /certs/server/tls.crt
    keyFile: /certs/server/tls.key
    caFile: /certs/server/ca.crt

immudb:
  address: ec-immudb-primary.imdb.svc.cluster.local
  port: 3322
  dbName: defaultdb
  user:
    name: immudb
    password: immudb
  mtls:
    enabled: true
    serverName: ec-immudb-primary
    certFile: /certs/immudb/tls.crt
    keyFile: /certs/immudb/tls.key
    caFile: /certs/immudb/ca.crt

cert-manager:
  install: false
  global:
    podSecurityPolicy:
      enabled: true
  installCRDs: true

service:
  type: ClusterIP
  port:
  ip:

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

reloader:
  enabled: true
  reloader:
    watchGlobally: false
    deployment:  
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 10m
          memory: 32Mi


nodeSelector: {}

tolerations: []

affinity: {}

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 256Mi

replica:
  enabled: false
  image:
    repository: gcr.io/astute-synapse-332322/immudb
    pullPolicy: IfNotPresent
    tag: ""
    hash: ""
  session:
    maxAgeTime: 0
    maxInactivityTime: 15m
    guardCheckInterval: 5m
    timeout: 15m
  resources:
    limits:
      cpu: 1000m
      memory: 4096Mi
    requests:
      cpu: 500m
      memory: 1024Mi
  storage:
    size: 2Gi
  podAnnotations: {}
  podSecurityContext:
    allowPrivilegeEscalation: false
  securityContext:
    runAsUser: 3322
    runAsGroup: 3322
    fsGroup: 3322
    runAsNonRoot: true

prometheus:
  enabled: false

  nodeExporter:
    enabled: false

  alertmanager:
    enabled: false

  pushgateway:
    enabled: false

  kubeStateMetrics:
    enabled: true

  kube-state-metrics:
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 10m
        memory: 32Mi

  rbac:
    create: true

  podSecurityPolicy:
    enabled: false

  ingress:
    enabled: false
    subPath:
      enabled: false
    hosts: []

  server:
    persistentVolume:
      enabled: true
      size: 10Gi

    strategy:
      type: Recreate

    configMapOverrideName: prometheus-config

    resources:
      limits:
        cpu: 1000m
        memory: 1024Mi
      requests:
        cpu: 100m
        memory: 512Mi


grafana:
  enabled: false
  replicas: 1
  testFramework:
    enabled: false
  rbac:
    create: true
    pspEnabled: true
    namespaced: true
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: "default"
          orgId: 1
          folder: ""
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: TemporalMetrics
          type: prometheus
          url: http://{{ .Release.Name }}-prometheus-server
          access: proxy
          isDefault: true
  sidecar:
    dashboards:
      enabled: true
    datasources:
      enabled: false
      initDatasources: false
  image:
    repository: grafana/grafana
    tag: 8.4.3
    sha: ""
  pullPolicy: IfNotPresent
  ingress:
    enabled: false
    subPath:
      enabled: false
    hosts: []